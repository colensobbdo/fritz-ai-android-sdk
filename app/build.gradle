apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

// From https://medium.com/@maxirosson/versioning-android-apps-d6ec171cfd82
ext.versionMajor = 2
ext.versionMinor = 1
ext.versionPatch = 0

ext.versionClassifier = null
ext.isSnapshot = false
ext.minimumSdkVersion = 24

android {
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    signingConfigs {
        release {
            keyAlias 'HeartbeatKey'
            keyPassword 'Jy7oRVbh^jXucPc'
            storeFile file('../android.jks')
            storePassword '7Dde3y&LXYME8N6BK;[>'
        }
    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "ai.fritz.heartbeat"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release

        renderscriptTargetApi 24
        renderscriptSupportModeEnabled true
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        noCompress "tflite"
    }

    lintOptions {
        abortOnError false
    }
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    implementation 'com.google.firebase:firebase-core:17.2.3'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.android.material:material:1.0.0'

    // Fritz SDK
    api project(':fritzcore')
    api project(':fritzvision')
    api project(':fritzvisionlabelmodelfast')
    api project(':fritzvisionobjectdetectionmodelfast')
    api project(':fritzvisionhairsegmentationmodelfast')
    api project(':fritzvisionpeoplesegmentationmodelfast')
    api project(':fritzvisionpetsegmentationmodelfast')
    api project(':fritzvisionskysegmentationmodelfast')
    api project(':fritzvisionstylepaintingmodels')
    api project(':fritzvisionposeestimationmodelfast')

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.13.0'
    testImplementation "org.robolectric:robolectric:4.0"

    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

apply plugin: 'com.google.gms.google-services'
